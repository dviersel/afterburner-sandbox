---

name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout afterburner repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set tag name
        run: |
          VERSION=$(cat ./VERSION)
          echo "TAG_NAME=$VERSION" >> $GITHUB_ENV
      # if no tag exists, this is expected to fail
      - name: Switch to git tag for release
        if: contains(env.TAG_NAME, 'SNAPSHOT') != true
        run: |
          git fetch --all --tags
          git checkout tags/${{ env.TAG_NAME }} -b ${{ env.TAG_NAME }}-tmp-branch
      - name: Write tag to file
        uses: "finnp/create-file-action@master"
        env:
          FILE_NAME: "version.txt"
          FILE_DATA: "${{ env.TAG_NAME }}-${{ github.sha }}"
      - name: Upload versions.txt to use in performance-test job
        uses: actions/upload-artifact@v1
        with:
          name: version
          path: version.txt
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Build local
        working-directory: afterburner-java
        run: ../mvnw clean install
      # Build docker image
      - name: Create and push docker image
        working-directory: afterburner-java
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: ../mvnw -Pmulti-arch-docker,pyroscope clean package jib:build

      ## checkout perfana-gitops
      - name: Checkout perfana-gitops
        uses: actions/checkout@v2
        with:
          repository: perfana/perfana-gitops
          token: ${{ secrets.PAT_GITHUB }}
          path: perfana-gitops
      - name: Replace image snapshot
        working-directory: perfana-gitops
        run: |
          repository="repository: perfana/afterburner"
          tag="tag: ${{ env.TAG_NAME }}-${{ github.sha }} # date: $(date +'%Y-%m-%dT%H:%M:%S')"
          echo "$repository"
          echo "$tag"
          ls -all
          sed -i "s|repository: .*|$repository|g" ./apps/acme/demo/optimus-prime-fe/values.yaml
          sed -i "s|repository: .*|$repository|g" ./apps/acme/demo/optimus-prime-be/values.yaml
          sed -i "s|tag: .*|$tag|g" ./apps/acme/demo/optimus-prime-fe/values.yaml
          sed -i "s|tag: .*|$tag|g" ./apps/acme/demo/optimus-prime-be/values.yaml
      - name: Commit files
        working-directory: perfana-gitops
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Bumped afterburner OptimusPrimes to ${{ env.TAG_NAME }} in demo environment" -a
          git push
          
  performance-test:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        id: install
      - name: Checkout code from code branch
        uses: actions/checkout@v2
        with:
          path: main
          fetch-depth: 0
      - name: Download version file
        uses: actions/download-artifact@v1
        with:
          name: version

      - name: Get version from file
        run: |
          ls -all
          cat /runner/_work/afterburner/afterburner/version/version.txt
          echo "TAG_NAME=$(cat /runner/_work/afterburner/afterburner/version/version.txt)" >> $GITHUB_ENV
      - name: Get commit message
        working-directory: main
        run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17.0.4+101'
          distribution: 'temurin'
          cache: maven
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: 17.0.4+101
          maven-version: 3.6.3
      - name: get KUBECONFIG from secrets
        env:
          KUBECONFIG_TO_FILE: ${{secrets.KUBECONFIG_ACME}}
        run: echo "$KUBECONFIG_TO_FILE" | base64 --decode --ignore-garbage >> /runner/_work/afterburner/afterburner/config
      - name: Check deployed version
        env:
          KUBECONFIG: /runner/_work/afterburner/afterburner/config
          IMAGE: perfana/afterburner:${{ env.TAG_NAME }}
        run: |
          while true; do
             echo "Waiting for deployment optimus-prime-fe-afterburner ..."
             if [[ $(kubectl get deployment optimus-prime-fe-afterburner -n acme -o jsonpath='{$.spec.template.spec.containers[:1].image}') = $IMAGE ]]; then
                echo "Deployment optimus-prime-fe-afterburner ready"
                break
             fi
             sleep 10
          done
          while true; do
             echo "Waiting for deployment optimus-prime-be-afterburner ..."
             if [[ $(kubectl get deployment optimus-prime-be-afterburner -n acme -o jsonpath='{$.spec.template.spec.containers[:1].image}') = $IMAGE ]]; then
                echo "Deployment optimus-prime-be-afterburner ready"
                break
             fi
             sleep 10
          done
          echo "Deployment ready, waiting 120s to make sure pods have started"
          sleep 120
      - name: Build with Maven
        env:
          KUBECONFIG: /runner/_work/afterburner/afterburner/config
        run: |
          cd afterburner-loadtest-gatling
          mvn clean install -U events-gatling:test -Ptest-env-tst,test-type-load,assert-results \
          -Dsut-config=optimus-prime \
          -DtestRunId="${{ github.job }}-${{ github.run_number }}" \
          -DbuildResultsUrl="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
          -Dversion="${{ env.TAG_NAME }}" \
          -DsystemUnderTest=OptimusPrime \
          -DtestEnvironment=tst \
          -Dannotations="${{ env.COMMIT_MESSAGE }}" \
          -DapiKey=${{ secrets.PERFANA_APIKEY }} \
          -DtargetBaseUrl=http://optimus-prime-fe-afterburner.perfana:8080 \
          -DinfluxUrl=http://influxdb.perfana:8086 \
          -DinfluxUser=admin \
          -DinfluxPassword=${{ secrets.INFLUXDB_PASSWORD }} \
          -DelasticPassword=${{ secrets.ELASTIC_PASSWORD }} \
          -DperfanaUrl=http://perfana-fe.perfana:3000
