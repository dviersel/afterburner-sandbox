# this name is also used in tracing
spring.application.name=afterburner-one

afterburner.name=afterburner-one

# default is 200 threads, try to run with less
server.tomcat.threads.max=30

afterburner.async_max_pool_size=10
afterburner.async_core_pool_size=5
afterburner.async_queue_size=-1

#afterburner.database_connect_query=SELECT 1

#afterburner.remote.call.additional.headers={'secret-header':'XYZ123'}

afterburner.remote.call.httpclient.connect.timeout.millis=500
afterburner.remote.call.httpclient.socket.timeout.millis=2000
afterburner.remote.call.httpclient.connection.request.timeout.millis=400
afterburner.remote.call.httpclient.connections.max=10

logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO

#Metrics related configurations
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# distributed tracing
spring.zipkin.base-url=http://localhost:9411/
# increase to activate, set to 1 to trace all calls
spring.sleuth.sampler.probability=1
spring.sleuth.keys.http.headers=perfana-test-run-id
spring.sleuth.propagation.tag.enabled=true
spring.sleuth.baggage.tag-fields=perfana-test-run-id
spring.sleuth.baggage.remote-fields=perfana-test-run-id

# Creates span for every connection and query. Works only with p6spy or datasource-proxy.
decorator.datasource.sleuth.enabled=true
# Specify traces that will be created in zipkin: connection, query, fetch
decorator.datasource.sleuth.include=query

decorator.datasource.p6spy.multiline=false

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=no-user
spring.datasource.password=no-password

mybatis.configuration.default-fetch-size=10

afterburner.mybatis.datasource.url=jdbc:mariadb://localhost:3306/employees
afterburner.mybatis.datasource.username=root
afterburner.mybatis.datasource.password=mypass
afterburner.mybatis.datasource.driver-class-name=org.mariadb.jdbc.Driver

# set to debug to see http headers in the logging
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=INFO
